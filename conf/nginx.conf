user root;
worker_processes auto;
worker_rlimit_nofile 51200;
error_log logs/error.log;
events {
    use epoll;
    worker_connections 51024;
}
http {
    #设置默认lua搜索路径
    lua_package_path '$prefix/lua/?.lua;/blah/?.lua;;';
    lua_code_cache off;		#线上环境设置为on, off时可以热加载lua文件
    lua_shared_dict user_info 1m;
    lua_shared_dict my_limit_conn_store 100m;   #100M可以放1.6M个键值对

    client_header_buffer_size 64k;
    large_client_header_buffers 4 64k;
    proxy_redirect off;
    proxy_buffering off;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Scheme $scheme;

    init_by_lua_file lua/init_by_lua.lua;       #nginx启动时就会执行
    #include /etc/nginx/conf.d/*.conf;
    include ./conf.d/*.conf;                    #lua生成upstream
    resolver 172.16.0.21;                        # 内部DNS

    server {
        listen 80;
        server_name  gw.shinezone.net.cn;
        lua_need_request_body on;           # 开启获取body数据记录日志

        location / {
            access_by_lua_file lua/access_check.lua;
            set $my_upstream $my_upstream;
            proxy_pass http://$my_upstream;

            add_header Access-Control-Allow-Methods *;
            add_header Access-Control-Max-Age 3600;
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Headers $http_access_control_request_headers;
            if ($request_method = OPTIONS){
                return 204;}

        }
    }
}
